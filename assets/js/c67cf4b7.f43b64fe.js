"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[421],{20326:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return r},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return p},default:function(){return u}});var i=a(87462),t=a(63366),s=(a(67294),a(3905)),l=["components"],r={sidebar_position:2},o="Simplified Styles",d={unversionedId:"fundamentals/simplifiedStyles",id:"fundamentals/simplifiedStyles",isDocsHomePage:!1,title:"Simplified Styles",description:"In RSS when passing a style they will be somewhat different for simplicity. For example instead of mentioning UIPadding instead you would just write padding, and with that simplicity comes also simplified values.",source:"@site/docs/fundamentals/simplifiedStyles.md",sourceDirName:"fundamentals",slug:"/fundamentals/simplifiedStyles",permalink:"/rss/docs/fundamentals/simplifiedStyles",editUrl:"https://github.com/imacodr/rss/edit/main/docs/fundamentals/simplifiedStyles.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Hey there, RSS!",permalink:"/rss/docs/fundamentals/heyrss"},next:{title:"Intro to Stylesheet files",permalink:"/rss/docs/advanced/stylesheetFiles"}},p=[{value:"UIPadding",id:"uipadding",children:[],level:3},{value:"UICorner &amp; UIScale",id:"uicorner--uiscale",children:[],level:3}],m={toc:p};function u(e){var n=e.components,a=(0,t.Z)(e,l);return(0,s.kt)("wrapper",(0,i.Z)({},m,a,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"simplified-styles"},"Simplified Styles"),(0,s.kt)("p",null,"In RSS when passing a style they will be somewhat different for simplicity. For example instead of mentioning ",(0,s.kt)("inlineCode",{parentName:"p"},"UIPadding")," instead you would just write ",(0,s.kt)("inlineCode",{parentName:"p"},"padding"),", and with that simplicity comes also simplified values."),(0,s.kt)("h3",{id:"uipadding"},"UIPadding"),(0,s.kt)("p",null,"Padding is one of our biggest simplified values. Instead of the clunky ",(0,s.kt)("inlineCode",{parentName:"p"},"PaddingTop")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"PaddingRight")," you can now pass a single ",(0,s.kt)("inlineCode",{parentName:"p"},"number")," to apply to all values or an array of 4 numbers each one representing a side for the padding. Keep in mind that all values are also done in Scale."),(0,s.kt)("p",null,"Order for padding numbers:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Top"),(0,s.kt)("li",{parentName:"ol"},"Right"),(0,s.kt)("li",{parentName:"ol"},"Bottom"),(0,s.kt)("li",{parentName:"ol"},"Left")),(0,s.kt)("p",null,"Lets see how padding is in action:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-lua"},'local rss = require(path/to/rss)\n\nlocal frame = Instance.new("Frame")\nframe.Parent = game.StarterGui\n\nrss.style({padding = 5}, frame) -- This will add `5` for all sides for padding\n\nrss.style({padding = {1,2,3,4}}, frame) -- This will add 1 for top, 2 for right, 3 for bottom, and 4 for left\n')),(0,s.kt)("h3",{id:"uicorner--uiscale"},"UICorner & UIScale"),(0,s.kt)("p",null,"Corner and Scale are very similar. For Corner you can pass a ",(0,s.kt)("inlineCode",{parentName:"p"},"UDim")," value, and for scale you can pass a ",(0,s.kt)("inlineCode",{parentName:"p"},"number")," value."),(0,s.kt)("p",null,"Lets see how corner and scale are in action:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-lua"},'local rss = require(path/to/rss)\n\nlocal frame = Instance.new("Frame")\nframe.Parent = game.StarterGui\n\nrss.style({corner = UDim.new(1,0), scale = 4}, frame) -- This will add `5` for all sides for padding\n')))}u.isMDXComponent=!0}}]);